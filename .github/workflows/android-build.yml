name: Android Build

on:
  push:
    branches:
      - main
      - 'release/*'  # 如果使用了 release 分支进行发布，也可以监听该分支的推送事件
  pull_request:
    branches:
      - main
  workflow_dispatch:
    paths:
      - '**.gradle'
      - '**.properties'
      - '**.java'
      - '**.xml'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build Android App
        run: ./gradlew assemble

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app/build/outputs/apk/release/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0  # 使用当前的 tag 名称作为发布版本的 tag 名称
          release_name: Release 1.0.0  # 使用当前的 tag 名称作为发布版本的名称
          body: |
            Description of the release
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/  # 指定要上传的文件路径
          asset_name: app-release.apk  # 指定发布的文件名
          asset_content_type: application/vnd.android.package-archive  # 指定文件类型
